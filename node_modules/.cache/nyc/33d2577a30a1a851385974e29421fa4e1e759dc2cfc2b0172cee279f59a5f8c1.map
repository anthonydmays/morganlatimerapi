{"version":3,"file":"/home/anthony/morganlatimerapi/orderprocessor/src/intuit-client.ts","sources":["/home/anthony/morganlatimerapi/orderprocessor/src/intuit-client.ts"],"names":[],"mappings":"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","sourcesContent":["import OAuthClient from 'intuit-oauth';\nimport QuickBooks from 'node-quickbooks';\nimport {promisify} from 'util';\n\nimport {AccountingClient, Customer} from './accounting-client';\nimport * as config from '../intuit_config.prod.json';\n\nexport class IntuitClient implements AccountingClient {\n   private authorized = false;\n\n  constructor(private readonly oAuthClient: OAuthClient) {}\n\n  authorize() {\n    return this.oAuthClient.authorizeUri({\n      scope: [OAuthClient.scopes.Accounting, OAuthClient.scopes.OpenId],\n      state: 'morganlatimerapi',\n    });\n  }\n\n  async fetchToken(url: string): Promise<string> {\n    try {\n      const authResponse = await this.oAuthClient.createToken(url);\n      this.authorized = true;\n      console.log(JSON.stringify(authResponse.getJson(), null, 2));\n      return 'Success.';\n    } catch (e) {\n      console.error(e);\n      return 'Failed to fetch token.';\n    }\n  }\n\n  async maybeRefreshToken(): Promise<boolean> {\n    if (!this.authorized) {\n      console.error('Intuit API access not authorized. Please grant access.');\n      return false;\n    }\n    if (this.oAuthClient.isAccessTokenValid()) {\n      console.log('Intuit access token valid.');\n      return true;\n    }\n    console.log('Refreshing Intuit token...');\n    try {\n      const authResponse = await this.oAuthClient.refresh();\n      console.log(JSON.stringify(authResponse.getJson(), null, 2));\n      return true;\n    } catch (e) {\n      console.error(e);\n    }\n    return false;\n  }\n\n  async getCustomer(email: string): Promise<Customer|null> {\n    const qbo = this.getClient();\n    const findCustomers = promisify(qbo.findCustomers).bind(qbo);\n    const response = await findCustomers({\n      PrimaryEmailAddr: email,\n    });\n    const customer = response.QueryResponse.Customer &&\n        response.QueryResponse.Customer[0];\n    return this.mapCustomer(customer);\n  }\n\n  async createCustomer(customer: Customer): Promise<Customer|null> {\n    const qbo = this.getClient();\n    const createCustomer = promisify(qbo.createCustomer).bind(qbo);\n    const newCustomer = await createCustomer({\n      GivenName: customer.firstName,\n      FamilyName: customer.lastName,\n      PrimaryEmailAddr: {Address: customer.email},\n    });\n    return this.mapCustomer(newCustomer);\n  }\n\n  async getInvoice(orderNumber: number): Promise<any> {\n    const qbo = this.getClient();\n    const findInvoices = promisify(qbo.findInvoices).bind(qbo);\n    const response = await findInvoices({\n      DocNumber: String(orderNumber),\n    });\n    const invoice = response.QueryResponse.Invoice &&\n        response.QueryResponse.Invoice[0];\n    return invoice;\n  }\n\n  async createInvoice(order: any, customer: Customer): Promise<any> {\n    const qbo = this.getClient();\n    const createInvoice = promisify(qbo.createInvoice).bind(qbo);\n    const invoice = {\n      CustomerRef: {\n        value: customer.ref.Id,\n        name: customer.ref.DisplayName,\n      },\n      BillEmail: {Address: customer.email},\n      DocNumber: order.number,\n      TrackingNum: order.transaction_id,\n      TxnDate: order.date,\n      DueDate: order.date,\n      Line: order.line_items.map((lineItem: any, i: number) => ({\n        LineNum: i + 1,\n        Description: lineItem.name,\n        DetailType: 'SalesItemLineDetail',\n        Amount: Number(lineItem.line_total),\n        SalesItemLineDetail: {\n          Qty: Number(lineItem.quantity),\n          UnitPrice: Number(lineItem.unit_price),\n        },\n      })),\n    };\n    const newInvoice = await createInvoice(invoice);\n    return newInvoice;\n  }\n\n  private mapCustomer(customer: any|null): Customer|null {\n    return customer ? {\n      id: customer.Id,\n      firstName: customer.GivenName,\n      lastName: customer.FamilyName,\n      email: customer.PrimaryEmailAddr.Address,\n      ref: customer,\n    } : null;\n  }\n\n  private getClient(): QuickBooks {\n    return new QuickBooks(\n        config.clientId,\n        config.clientSecret,\n        this.oAuthClient.token.access_token,\n        false,\n        '' + this.oAuthClient.token.realmId,\n        config.environment === 'sandbox',\n        config.debug,\n        34,\n        '2.0',\n        this.oAuthClient.token.refresh_token);\n }\n}\n"]}